{"version":3,"sources":["components/Player.js","components/Notification.js","services/player.js","services/login.js","App.js","index.js"],"names":["Player","player","name","surname","id","Notification","message","className","baseUrl","token","setToken","newToken","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","put","del","delete","login","credentials","App","useState","players","setPlayers","newName","setNewName","newSurname","setNewSurname","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","useEffect","playerService","initialPlayers","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","console","log","loginService","setItem","stringify","setTimeout","onSubmit","type","value","onChange","target","removeItem","map","i","playerObject","length","returnedPlayer","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1697fc9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Player = ({ player }) => {\r\n    return (\r\n        <li>{player.name} {player.surname} {player.id}</li>\r\n    )\r\n}\r\n\r\nexport default Player","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios'\r\nconst baseUrl = '/api/players'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const request = axios.delete(`${baseUrl}/${id}`, config)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { setToken, getAll, create, update, del }","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios'\r\n\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default { login }","import React, {useState, useEffect} from 'react'\r\nimport Player from './components/Player'\r\nimport Notification from './components/Notification'\r\nimport playerService from './services/player'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n    const [players, setPlayers] = useState([])\r\n    const [newName, setNewName] = useState('New name...')\r\n    const [newSurname, setNewSurname] = useState('New surname...')\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [user, setUser] = useState(null)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        playerService\r\n            .getAll()\r\n            .then(initialPlayers => {\r\n                setPlayers(initialPlayers)\r\n            })\r\n        }, [])\r\n        \r\n        useEffect(() => {\r\n            const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n            if (loggedUserJSON) {\r\n              const user = JSON.parse(loggedUserJSON)\r\n              setUser(user)\r\n              playerService.setToken(user.token)\r\n            }\r\n          }, [])\r\n        \r\n          const handleLogin = async (event) => {\r\n            event.preventDefault()\r\n            console.log('logging in with', username, password)\r\n        \r\n            try {\r\n              const user = await loginService.login({\r\n                username, password\r\n              })\r\n        \r\n              window.localStorage.setItem(\r\n                'loggedBlogappUser', JSON.stringify(user)\r\n              )\r\n              playerService.setToken(user.token)\r\n              setUser(user)\r\n              setUsername('')\r\n              setPassword('')\r\n            } catch (exception) {\r\n              setErrorMessage('wrong credentials')\r\n              setTimeout(() => {\r\n                setErrorMessage(null)\r\n              }, 5000)\r\n            }\r\n          }\r\n        \r\n          const handleLogout = () => {\r\n            window.localStorage.removeItem('loggedBlogappUser')\r\n          }\r\n        \r\n        const addPlayer = (event) => {\r\n        event.preventDefault()\r\n        const playerObject = {\r\n            name: newName,\r\n            surname: newSurname,\r\n            id: players.length + 1,\r\n        }\r\n\r\n        playerService\r\n            .create(playerObject)      \r\n            .then(returnedPlayer => {        \r\n                setPlayers(players.concat(returnedPlayer))        \r\n                setNewName('')\r\n                setNewSurname('')      \r\n            })    \r\n        }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleSurnameChange = (event) => {\r\n        setNewSurname(event.target.value)\r\n    }\r\n\r\n    if (user === null) {\r\n        return (\r\n          <div>\r\n            <h2>Log in to application</h2>\r\n            <Notification message={errorMessage} />\r\n            <form onSubmit={handleLogin}>\r\n              <div>\r\n                username\r\n                <input\r\n                  id=\"username\"\r\n                  type=\"text\"\r\n                  value={username}\r\n                  name=\"Username\"\r\n                  onChange={({ target }) => setUsername(target.value)}\r\n                />\r\n              </div>\r\n              <div>\r\n                password\r\n                <input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  name=\"Password\"\r\n                  onChange={({ target }) => setPassword(target.value)}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" id=\"login-button\">login</button>\r\n            </form>\r\n          </div>\r\n        )\r\n      }\r\n    \r\n      return (\r\n        <div>\r\n            <Notification message={errorMessage} />\r\n            <div>\r\n                {user.name} is logged in\r\n                <form onSubmit={handleLogout}>\r\n                <button type=\"submit\">logout</button>\r\n                </form>\r\n            </div>\r\n\r\n            <h1>Players:</h1>\r\n            <ul>\r\n                {players.map((player, i) => \r\n                    <Player key={player.id} player={player} />\r\n                )}\r\n            </ul>\r\n            <form onSubmit={addPlayer}>\r\n                Name: \r\n                <input\r\n                    value={newName}\r\n                    onChange={handleNameChange}\r\n                /><br />\r\n                Surname: \r\n                <input\r\n                    value={newSurname}\r\n                    onChange={handleSurnameChange}\r\n                /><br />\r\n                <button type=\"submit\">Add player</button>\r\n            </form>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n)"],"sourceRoot":""}